mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
mutate(WBCOMITT = WBCOMMIT*1000000) %>%
mutate(BILATCOM=BILATCOM*1000000) %>%
# error in the author's code here; there are two M's in the MULTICOMM variable
mutate(MULTCOMM=MULTCOMM*1000000) %>%
mutate(WBPOP=WBCOMMIT/POPULATI) %>%
mutate(BIPOP = BILATCOM/POPULATI) %>%
mutate(MUPOP=MULTCOMM/POPULATI) %>%
mutate(GDPPOP=GDP/POPULATI) %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP)) %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP= ln(BIPOP)%>%
mutate(MUPOP = ifelse(MUPOP < 1 & !is.na(MUPOP), 1, MUPOP)) %>%
mutate(MUPOP = ln(MUPOP)) %>%
mutate(GDPPOP= ln(GDPPOP)) %>%
group_by(BIPOP)
view(training_clean)
view(training_clean)
training_clean <- training %>%
# ts(training$CCODE, training$YEAR) %>%
mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
mutate(WBCOMITT = WBCOMMIT*1000000) %>%
mutate(BILATCOM=BILATCOM*1000000) %>%
# error in the author's code here; there are two M's in the MULTICOMM variable
mutate(MULTCOMM=MULTCOMM*1000000) %>%
mutate(WBPOP=WBCOMMIT/POPULATI) %>%
mutate(BIPOP = BILATCOM/POPULATI) %>%
mutate(MUPOP=MULTCOMM/POPULATI) %>%
mutate(GDPPOP=GDP/POPULATI) %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP)) %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP= ln(BIPOP)%>%
mutate(MUPOP = ifelse(MUPOP < 1 & !is.na(MUPOP), 1, MUPOP)) %>%
mutate(MUPOP = ln(MUPOP)) %>%
mutate(GDPPOP= ln(GDPPOP)) %>%
group_by(BIPOP)
view(training_clean)
training_clean <- training %>%
# ts(training$CCODE, training$YEAR) %>%
mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
mutate(WBCOMITT = WBCOMMIT*1000000) %>%
mutate(BILATCOM=BILATCOM*1000000) %>%
# error in the author's code here; there are two M's in the MULTICOMM variable
mutate(MULTCOMM=MULTCOMM*1000000) %>%
mutate(WBPOP=WBCOMMIT/POPULATI) %>%
mutate(BIPOP = BILATCOM/POPULATI) %>%
mutate(MUPOP=MULTCOMM/POPULATI) %>%
mutate(GDPPOP=GDP/POPULATI) %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP)) %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP= ln(BIPOP)%>%
mutate(MUPOP = ifelse(MUPOP < 1 & !is.na(MUPOP), 1, MUPOP)) %>%
mutate(MUPOP = ln(MUPOP)) %>%
mutate(GDPPOP= ln(GDPPOP)
view(training_clean)
training_clean <- training %>%
# ts(training$CCODE, training$YEAR) %>%
mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
mutate(WBCOMITT = WBCOMMIT*1000000) %>%
mutate(BILATCOM=BILATCOM*1000000) %>%
# error in the author's code here; there are two M's in the MULTICOMM variable
mutate(MULTCOMM=MULTCOMM*1000000) %>%
mutate(WBPOP=WBCOMMIT/POPULATI) %>%
mutate(BIPOP = BILATCOM/POPULATI) %>%
mutate(MUPOP=MULTCOMM/POPULATI) %>%
mutate(GDPPOP=GDP/POPULATI) %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP)) %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP= ln(BIPOP)%>%
mutate(MUPOP = ifelse(MUPOP < 1 & !is.na(MUPOP), 1, MUPOP)) %>%
mutate(MUPOP = ln(MUPOP)) %>%
mutate(GDPPOP= ln(GDPPOP))
view(training_clean)
training_clean <- training %>%
# ts(training$CCODE, training$YEAR) %>%
mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
mutate(WBCOMITT = WBCOMMIT*1000000) %>%
mutate(BILATCOM=BILATCOM*1000000) %>%
# error in the author's code here; there are two M's in the MULTICOMM variable
mutate(MULTCOMM=MULTCOMM*1000000) %>%
mutate(WBPOP=WBCOMMIT/POPULATI) %>%
mutate(BIPOP = BILATCOM/POPULATI) %>%
mutate(MUPOP=MULTCOMM/POPULATI) %>%
mutate(GDPPOP=GDP/POPULATI) %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP)) %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP= ln(BIPOP)%>%
mutate(MUPOP = ifelse(MUPOP < 1 & !is.na(MUPOP), 1, MUPOP)) %>%
mutate(MUPOP = ln(MUPOP)) %>%
mutate(GDPPOP = ln(GDPPOP))
view(training_clean)
training_clean <- training %>%
# ts(training$CCODE, training$YEAR) %>%
mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
mutate(WBCOMITT = WBCOMMIT*1000000) %>%
mutate(BILATCOM=BILATCOM*1000000) %>%
# error in the author's code here; there are two M's in the MULTICOMM variable
mutate(MULTCOMM=MULTCOMM*1000000) %>%
mutate(WBPOP=WBCOMMIT/POPULATI) %>%
mutate(BIPOP = BILATCOM/POPULATI) %>%
mutate(MUPOP=MULTCOMM/POPULATI) %>%
mutate(GDPPOP=GDP/POPULATI)
view(training_clean)
training_clean <- training %>%
# ts(training$CCODE, training$YEAR) %>%
mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
mutate(WBCOMITT = WBCOMMIT*1000000) %>%
mutate(BILATCOM=BILATCOM*1000000) %>%
# error in the author's code here; there are two M's in the MULTICOMM variable
mutate(MULTCOMM=MULTCOMM*1000000) %>%
mutate(WBPOP=WBCOMMIT/POPULATI) %>%
mutate(BIPOP = BILATCOM/POPULATI) %>%
mutate(MUPOP=MULTCOMM/POPULATI) %>%
mutate(GDPPOP=GDP/POPULATI) %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)
view(training_clean)
training_clean <- training %>%
# ts(training$CCODE, training$YEAR) %>%
mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
mutate(WBCOMITT = WBCOMMIT*1000000) %>%
mutate(BILATCOM=BILATCOM*1000000) %>%
# error in the author's code here; there are two M's in the MULTICOMM variable
mutate(MULTCOMM=MULTCOMM*1000000) %>%
mutate(WBPOP=WBCOMMIT/POPULATI) %>%
mutate(BIPOP = BILATCOM/POPULATI) %>%
mutate(MUPOP=MULTCOMM/POPULATI) %>%
mutate(GDPPOP=GDP/POPULATI)
view(training_clean)
training_clean$BIPOP
training$BILATCOM
training_clean <- training %>%
# ts(training$CCODE, training$YEAR) %>%
mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
mutate(WBCOMITT = WBCOMMIT*1000000) %>%
mutate(BILATCOM=BILATCOM*1000000) %>%
# error in the author's code here; there are two M's in the MULTICOMM variable
mutate(MULTCOMM=MULTCOMM*1000000) %>%
mutate(WBPOP=WBCOMMIT/POPULATI) %>%
mutate(BIPOP = BILATCOM/POPULATI) %>%
mutate(MUPOP=MULTCOMM/POPULATI) %>%
mutate(GDPPOP=GDP/POPULATI)
training_edit <- training_clean %>%
mutate(WBPOP = if.else(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP))
training_edit <- training_clean %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP))
view(training_edit)
training_edit$WBPOP
training_clean$WBPOP
training_edit <- training_clean %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP))
training_edit$WBPOP
training_edit <- training_clean %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP)) %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP= ln(BIPOP)%>%
mutate(MUPOP = ifelse(MUPOP < 1 & !is.na(MUPOP), 1, MUPOP)) %>%
mutate(MUPOP = ln(MUPOP)) %>%
mutate(GDPPOP = ln(GDPPOP))
training_edit$GDPPOP
view(training_edit)
training_edit <- training_clean %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP)) %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP= ln(BIPOP)%>%
mutate(MUPOP = ifelse(MUPOP < 1 & !is.na(MUPOP), 1, MUPOP)) %>%
mutate(MUPOP = ln(MUPOP)) %>%
mutate(GDPPOP = ln(GDPPOP))
view(training_edit)
training_edit <- training_clean %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP)) %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP= ln(BIPOP)%>%
mutate(MUPOP = ifelse(MUPOP < 1 & !is.na(MUPOP), 1, MUPOP)) %>%
mutate(MUPOP = ln(MUPOP)) %>%
mutate(GDPPOP = ifelse(GDPPOP < 1 & !is.na(GDPPOP), 1, GDPPOP)) %>%
mutate(GDPPOP = ln(GDPPOP))
view(training_edit)
training_edit <- training_clean %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP)) %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP= ln(BIPOP)%>%
mutate(MUPOP = ifelse(MUPOP < 1 & !is.na(MUPOP), 1, MUPOP)) %>%
mutate(MUPOP = ln(MUPOP))
view(training_edit)
training_edit <- training_clean %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP)) %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP= ln(BIPOP)
view(training_edit)
training_edit <- training_clean %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP))
view(training_edit)
training_clean %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP))
training_clean %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP= ln(BIPOP)
training_clean %>%
training_clean %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP))
training_clean %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP = ln(BIPOP)
training_clean %>%
training_clean %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP = ln(BIPOP)
training_clean %>%
training_edit <- training_clean %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP)) %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP = ln(BIPOP)) %>%
mutate(MUPOP = ifelse(MUPOP < 1 & !is.na(MUPOP), 1, MUPOP)) %>%
mutate(MUPOP = ln(MUPOP)) %>%
mutate(GDPPOP = ifelse(GDPPOP < 1 & !is.na(GDPPOP), 1, GDPPOP)) %>%
mutate(GDPPOP = ln(GDPPOP))
view(training_edit)
training_edit <- training_clean %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP)) %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP = ln(BIPOP)) %>%
mutate(MUPOP = ifelse(MUPOP < 1 & !is.na(MUPOP), 1, MUPOP)) %>%
mutate(MUPOP = ln(MUPOP)) %>%
mutate(GDPPOP = ifelse(GDPPOP < 1 & !is.na(GDPPOP), 1, GDPPOP)) %>%
mutate(GDPPOP = ln(GDPPOP)) %>%
mutate(l_BIPOP = lag(BIPOP, n = 1, default = NA)) %>%
mutate(d_lnBIPOP = BIPOP - l_BIPOP))
training_edit <- training_clean %>%
mutate(WBPOP = ifelse(WBPOP < 1 & !is.na(WBPOP), 1, WBPOP)) %>%
mutate(WBPOP = ln(WBPOP)) %>%
mutate(BIPOP = ifelse(BIPOP < 1 & !is.na(BIPOP), 1, BIPOP)) %>%
mutate(BIPOP = ln(BIPOP)) %>%
mutate(MUPOP = ifelse(MUPOP < 1 & !is.na(MUPOP), 1, MUPOP)) %>%
mutate(MUPOP = ln(MUPOP)) %>%
mutate(GDPPOP = ifelse(GDPPOP < 1 & !is.na(GDPPOP), 1, GDPPOP)) %>%
mutate(GDPPOP = ln(GDPPOP)) %>%
mutate(l_BIPOP = lag(BIPOP, n = 1, default = NA)) %>%
mutate(d_lnBIPOP = BIPOP - l_BIPOP)
view(training_edit)
library(VGAM)
mod_1 <- vglm(BIPOP ~ PUBRES, family = tobit(Lower = 0), data = training_edit)
summary(mod_1)
etable(mod1)
# tobit BIPOP PUBRES if BIPOP<3.25, ll(0)
# tobit BIPOP PUBRES if BIPOP>=3.25, ll(0)
library(VGAM)
mod_1 <- vglm(BIPOP ~ PUBRES, family = tobit(Lower = 0), data = training_edit)
mod2_dat <- training_edit %>%
filter(BIPOP < 3.25)
mod_1 <- vglm(BIPOP ~ PUBRES, family = tobit(Lower = 0), data = mod1_dat)
mod1_dat <- training_edit %>%
filter(BIPOP < 3.25)
# tobit BIPOP PUBRES if BIPOP>=3.25, ll(0)
library(VGAM)
mod_1 <- vglm(BIPOP ~ PUBRES, family = tobit(Lower = 0), data = mod1_dat)
summary(mod1)
summary(mod_1)
mod2_dat <- training_edit %>%
filter(BIPOP >= 3.25)
mod2_dat <- training_edit %>%
filter(BIPOP >= 3.25)
library(VGAM)
mod_2 <- vglm(BIPOP ~ PUBRES, family = tobit(Lower = 0), data = mod2_dat)
summary(mod_2)
training <- merge(imtad_clean, public_res)
view(public_res)
view(imtad_clean)
training_clean <- training %>%
# ts(training$CCODE, training$YEAR) %>%
mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
# in place of what the author did here,I will mutate missTrainingBudget as
# that will be the dependent variable in this analysis.
mutate(missTrainingBudget = missTrainingBudget*1000000) %>%
mutate(budgetPOP = missTrainingBudget/POPULATI) %>%
mutate(budgetPOP = ifelse(budgetPOP < 1 & !is.na(budgetPOP), 1, budgetPOP)) %>%
mutate(l_budgetPOP = lag(budgetPOP, n = 1, default = NA)) %>%
mutate(d_lnbudgetPOP = budgetPOP - l_budgetPOP)
training_clean <- training %>%
# ts(training$CCODE, training$YEAR) %>%
mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
# in place of what the author did here,I will mutate missTrainBudget as
# that will be the dependent variable in this analysis.
mutate(missTrainBudget = missTrainBudget*1000000) %>%
mutate(budgetPOP = missTrainBudget/POPULATI) %>%
mutate(budgetPOP = ifelse(budgetPOP < 1 & !is.na(budgetPOP), 1, budgetPOP)) %>%
mutate(l_budgetPOP = lag(budgetPOP, n = 1, default = NA)) %>%
mutate(d_lnbudgetPOP = budgetPOP - l_budgetPOP)
view(training_clean)
training_clean$budgetPOP
training_clean <- training %>%
# ts(training$CCODE, training$YEAR) %>%
mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
# in place of what the author did here,I will mutate missTrainBudget as
# that will be the dependent variable in this analysis.
mutate(missTrainBudget = missTrainBudget*1000000) %>%
mutate(budgetPOP = missTrainBudget/POPULATI) %>%
mutate(budgetPOP = ifelse(budgetPOP < 1 & !is.na(budgetPOP), 1, budgetPOP)) %>%
mutate(l_budgetPOP = lag(budgetPOP, n = 1, default = NA)) %>%
mutate(d_lnbudgetPOP = budgetPOP - l_budgetPOP)
mod1_dat <- training_edit %>%
filter(budgetPOP < 3.25)
mod_1 <- vglm(budgetPOP ~ PUBRES, family = tobit(Lower = 0), data = mod1_dat)
mod_1 <- vglm(budgetPOP ~ PUBRES, family = tobit(Lower = 0), data = training_clean)
summary(mod_1)
mod_2 <- vglm(l_budgetPOP ~ PUBRES, family = tobit(Lower = 0), data = training_clean)
summary(mod_2)
mod_3 <- vglm(d_lnbudgetPOP ~ PUBRES, family = tobit(Lower = 0), data = training_clean)
summary(mod_3)
mod_1 <- vglm(budgetPOP ~ PUBRES, family = tobit(Lower = 0), data = training_clean)
summary(mod_1)
mod_2 <- vglm(l_budgetPOP ~ PUBRES, family = tobit(Lower = 0), data = training_clean)
summary(mod_2)
mod_3 <- vglm(d_lnbudgetPOP ~ PUBRES, family = tobit(Lower = 0), data = training_clean)
summary(mod_3)
library(fixest)
etable(mod_1)
etable(mod_1)
# prefered specification
mod_1 <- feglm(budgetPOP ~ PUBRES, family = tobit(Lower = 0), data = training_clean)
# lagged model
mod_2 <- feglm(l_budgetPOP ~ PUBRES, family = tobit(Lower = 0), data = training_clean)
# prefered specification
mod_1 <- feglm(budgetPOP ~ PUBRES, family = "tobit", data = training_clean)
mod_1 <- vglm(budgetPOP ~ PUBRES, family = tobit(Lower = 0), data = training_clean)
# lagged model
mod_2 <- vglm(l_budgetPOP ~ PUBRES, family = tobit(Lower = 0), data = training_clean)
#demeaned model
mod_3 <- vglm(d_lnbudgetPOP ~ PUBRES, family = tobit(Lower = 0), data = training_clean)
summary(mod_1, mod_2, mod_3)
library(modelsummary)
install.packages("modelsummary")
library(modelsummary)
install.packages("modelsummary")
library(modelsummary)
library(modelsummary)
modelsummary(mod_1, mod_2, mod_3)
modelsummary(c(mod_1, mod_2, mod_3))
modelsummary(c(mod_1, mod_2, mod_3), output = table.tex)
modelsummary(c(mod_1, mod_2, mod_3), output = "tex")
modelsummary(c(mod_1, mod_2, mod_3), output = "latex")
min(training_clean$YEAR)
max(training_clean$YEAR)
max(training_clean$YEAR1)
max(training_clean$YEAR1)
min(training_clean$YEAR1)
weapons <- read.csv("weapons.csv")
view(weapons)
weapons_clean %>%
rotate_df()
weapons <- read.csv("weapons.csv")
weapons_clean <- weapons %>%
rotate_df()
library(tidyverse)
# install.packages("sjmisc")
library(sjmisc)
library(ggplot2)
weapons_clean <- weapons %>%
rotate_df()
view(weapons_clean)
weapons <- read.csv("weapons.csv")
view(weapons)
weapons_edit <- weapons[10 & 22,]
view(weapons_edit)
weapons_edit <- weapons[,10 & 22]
view(weapons_edit)
weapons_edit <- weapons[10]
view(weapons_edit)
weapons_edit <- weapons[,10]
view(weapons_edit)
weapons_edit <- weapons[10,]
view(weapons_edit)
weapons_edit <- weapons[10 & 22,]
view(weapons_edit)
years <- weapons[10,]
total <- weapons[22,]
view(totalx)
view(total)
weapons_edit <- rbind(years, total)
weapons_edit <- as.dataframe(rbind(years, total))
weapons_edit <- as.data.frame(rbind(years, total))
view(weapons_edit)
weapons_edit <- as.data.frame(rbind(years, total))
weapons_edit
weapons_clean <- weapons(edit[,2:20])
weapons_clean <- weapons_edit[,2:20]
weapons_clean
weapons_clean <- weapons_edit[,2:20] %>%
rotate_df()
weapons_clean
weapons_clean <- weapons_edit[,2:20] %>%
rotate_df() %>%
rename_columns(10 = YEAR, 22 = TOTAL)
weapons_clean
weapons_clean <- weapons_edit[,2:20] %>%
rotate_df()
weapons_clean <- weapons_edit[,2:20] %>%
rotate_df()
waepons_new <- weapons_clean[,2:3]
weapons_clean <- weapons_edit[,2:20] %>%
rotate_df()
weapons_clean
weapons_clean <- weapons_edit[,2:20] %>%
rotate_df() %>%
rename_columns([,1] = YEAR)
weapons_clean <- weapons_edit[,2:20] %>%
rotate_df() %>%
rename_columns([,1] = YEAR)
weapons_clean <- weapons_edit[,2:20] %>%
rotate_df() %>%
rename_columns(weapons_edit[,1] = YEAR)
weapons_clean
names(weapons_clean)[1] <- "YEAR"
weapons_clean
names(weapons_clean)[2] <- "MILAID"
names(weapons_clean)[2] <- "WEPAID"
us_weapons <- merge(weapons_clean, public_res)
us_weapons <- merge(weapons_clean, public_res)
us_weapons_clean <- us_weapons %>%
mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
# in place of what the author did here,I will mutate missTrainBudget as
# that will be the dependent variable in this analysis.
mutate(WEPAID = WEPAID*1000000) %>%
mutate(WEPPOP = WEPAID/POPULATI) %>%
mutate(WEPPOP = ifelse(WEPPOP < 1 & !is.na(WEPPOP), 1, WEPOP)) %>%
mutate(l_WEPPOP = lag(WEPPOP, n = 1, default = NA)) %>%
mutate(d_lnWEPPOP = WEPPOP - l_WEPPOP)
us_weapons_clean <- us_weapons %>%
mutate(X = YEAR-1990) %>%
mutate(linear = 2*X) %>%
mutate(quad = (4*(X*X))-2) %>%
mutate(tri = 8*(X*X*X)-12*X) %>%
# in place of what the author did here,I will mutate missTrainBudget as
# that will be the dependent variable in this analysis.
mutate(WEPAID = WEPAID*1000000) %>%
mutate(WEPPOP = WEPAID/POPULATI) %>%
mutate(WEPPOP = ifelse(WEPPOP < 1 & !is.na(WEPPOP), 1, WEPPOP)) %>%
mutate(l_WEPPOP = lag(WEPPOP, n = 1, default = NA)) %>%
mutate(d_lnWEPPOP = WEPPOP - l_WEPPOP)
mod_3 <- vglm(WEPPOP ~ PUBRES, family = tobit(Lower = 0), data = us_weapons_clean)
summary(mod_3)
# lagged model
mod_5 <- vglm(l_WEPPOP ~ PUBRES, family = tobit(Lower = 0), data = us_weapons_clean)
summary(mod_5)
#demeaned model
mod_6 <- vglm(d_lnWEPPOP ~ PUBRES, family = tobit(Lower = 0), data = us_weapons_clean)
modelsummary(c(mod_4, mod_5, mod_6))
mod_4 <- vglm(WEPPOP ~ PUBRES, family = tobit(Lower = 0), data = us_weapons_clean)
mod_4 <- vglm(WEPPOP ~ PUBRES, family = tobit(Lower = 0), data = us_weapons_clean)
modelsummary(c(mod_4, mod_5, mod_6))
summary(mod_6)
summary(mod_4)
modelsummary(c(mod_4, mod_5, mod_6),estimate  = c("estimate",
"{estimate}{stars}",
"{estimate} ({std.error})",
"{estimate} ({std.error}){stars}",
"{estimate} [{conf.low}, {conf.high}]"))
modelsummary(c(mod_4, mod_5, mod_6), coef_omit = "Intercept")
modelsummary(c(mod_4, mod_5, mod_6), coef_omit = "Intercept", estimate = "{estimate}{stars}")
modelsummary(c(mod_4, mod_5, mod_6), coef_omit = "Intercept", estimate = "{estimate}{stars}", output = "latex")
